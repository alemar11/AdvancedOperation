name: "AdvancedOperation CI"

on:
  schedule:
    #- cron:  '0 * * * *' # every 1 hour
    - cron:  '* 23 * * *' # At the end of every day
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  info:
    name: Show macOS and Xcode versions
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    steps:
      - name: stats
        run: |
          sw_vers
          xcodebuild -version
          xcodebuild -showsdks
          xcrun simctl list
  macOS:
    name: Test macOS
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    steps:
      - uses: actions/checkout@v2
      - name: macOS
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "AdvancedOperation.xcodeproj" -scheme "AdvancedOperation macOS" -destination "platform=macOS" clean test -quiet
  iOS:
    name: Test iOS
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    strategy:
      matrix:
        destination: ["OS=14.0,name=iPhone 11 Pro"] #, "OS=12.4,name=iPhone XS", "OS=11.4,name=iPhone X"]
    steps:
      - uses: actions/checkout@v2
      - name: iOS - ${{ matrix.destination }}
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "AdvancedOperation.xcodeproj" -scheme "AdvancedOperation iOS" -destination "${{ matrix.destination }}" clean test -quiet

      # - name: Upload failure tests report
      #   #if: failure()
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: iOS tests log
      #     path: /Users/runner/Library/Developer/Xcode/DerivedData/
  tvOS:
    name: Test tvOS
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    strategy:
      matrix:
        destination: ["OS=14.0,name=Apple TV 4K"] #, "OS=13.0,name=Apple TV 4K (at 1080p)", "OS=11.4,name=Apple TV 4K"]
    steps:
      - uses: actions/checkout@v2
      - name: tvOS - ${{ matrix.destination }}
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "AdvancedOperation.xcodeproj" -scheme "AdvancedOperation tvOS" -destination "${{ matrix.destination }}" clean test -quiet
      
    name: Upload failure tests report
      #if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: tvOS tests log
        path: /Users/runner/Library/Developer/Xcode/DerivedData/  
  watchOS:
    name: Build watchOS
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    strategy:
      matrix:
        destination: ["OS=7.0,name=Apple Watch Series 5 - 44mm"] #, ""OS=5.3,name=Apple Watch Series 4 - 44mm", "OS=4.2,name=Apple Watch Series 3 - 42mm"]
    steps:
      - uses: actions/checkout@v2
      - name: watchOS - ${{ matrix.destination }}
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "AdvancedOperation.xcodeproj" -scheme "AdvancedOperation watchOS" -destination "${{ matrix.destination }}" clean build -quiet
  spm:
    name: Test SPM Integration
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    steps:
      - uses: actions/checkout@v2
      - name: SPM Test
        run: |
          swift --version
          swift test
